@use "../../../utils/variables" as v;
@use "../../../utils/mixins" as m;

.item-vew-top-bar-component,
.js-get-item-vew-top-bar-component {
	@include m.full-width-minus-nav-panel();

	// z-index must be more than 'item-content-container' element in the itemView
	// ...component so the 'options-components-container' element can overlap it
	z-index: 1;
	position: fixed;
	top: v.$common-top-bar-top;
	left: v.$common-left;
	border-bottom: v.$common-top-bar-border-width solid
		v.$mode-common-top-bar-border-color-light;
	background-color: v.$mode-common-top-bar-background-color-light;
	height: v.$common-top-bar-height;
	font-family: Arial, Helvetica, sans-serif;

	// Supposed to contain item-view-top-bar-options-button-component and
	// item-view-top-bar-options-dropdown-component
	.options-components-container {
		position: absolute;
		top: 12px;
		right: 50px;
		width: 135px;
	}

	.item-view-top-bar-options-button-component {
		// z-index must be more than item-view-top-bar-options-dropdown-component so the two
		// ...containers can look like one
		z-index: 1;
		position: absolute;
		right: 0px;
		// Border given color through JS
		border: v.$common-top-bar-button-with-dropdown-displayed-border-width
			solid transparent;
		// No bottom border so button and dropdown can both look like one 
		// element when the dropdown is displayed and this button is given
		// its modifier
		border-bottom: none;
		border-radius: v.$common-top-bar-buttton-border-radius
			v.$common-top-bar-buttton-border-radius 0 0;
		background: none;
		height: 29px;
		width: v.$item-view-top-bar-options-button-width;
		color: v.$mode-common-icon-button-text-color-light;
		font-size: 28px;
		text-align: center;
		cursor: pointer;

		&:hover,
		&:active {
			color: v.$mode-common-icon-button-hover-text-color-light;
		}
	}

	.item-view-top-bar-options-button-component__centered-icon {
		@include m.dead-center();
	}

	.item-view-top-bar-options-dropdown-component {
		position: absolute;
		top: 29px;
		right: 0;
		border: 3px solid black;
		border-radius: v.$common-top-bar-buttton-border-radius 0
			v.$common-top-bar-buttton-border-radius
			v.$common-top-bar-buttton-border-radius;
		background-color: white;
		color: v.$mode-item-view-top-bar-icon-button-text-color-light;
		width: 129px;
	}

	.item-view-top-bar-options-dropdown-component__row-button {
		display: block;
		border-bottom: 1px solid gray;
		padding: 12px;
		cursor: pointer;

		&:hover,
		&:active {
			background-color: v.$mode-item-view-top-bar-options-dropdown-row-hover-background-color-light;
		}
	}

	.item-view-top-bar-options-dropdown-component__row-button--first-option {
		border-radius: v.$common-top-bar-buttton-border-radius
			v.$common-top-bar-buttton-border-radius 0 0;
	}

	.item-view-top-bar-options-dropdown-component__row-button--last-option {
		// No bottom border since no options bellow
		border-bottom: none;
		border-radius: 0 0 v.$common-top-bar-buttton-border-radius
			v.$common-top-bar-buttton-border-radius;
	}

	.exit-icon-button {
		@include m.exit-icon-button();
		top: 11px;
		color: v.$mode-item-view-top-bar-icon-button-text-color-light;
	}
}
